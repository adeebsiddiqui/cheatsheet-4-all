Legend: <> = variable, [] = optional
====================================
echo $SHELL OR echo $0          --> current running shell

cat /etc/shells                 --> List of available shells

chsh -s /bin/zsh                --> change current shell to '/bin/zsh'

whoami							--> display logged in user

pwd								--> print present working directory

<command> --help
OR 								--> display the help or manual page for a command
man <command>

history							--> show command history
!history_number					--> Run that particular command

Ctrl+r							--> search command history while typing [keep pressing Ctrl+r to see commands having typed word from history. Hit any arrow button to select the command you want to execute]

mkdir <foo>						--> creates a directory or folder named foo

touch <file>... 				--> create file(s)

cd /							--> go to root directory
cd OR cd ~						--> go to home directory
cd -							--> go to the last directory you were just in

cp <file1> <file2>				--> copy <file1> to <file2>
cp -r <foo1> <foo2>				--> copy directory <foo1> to <foo2>. create <foo2> if it doesn't exist

mv <foo1> <foo2>				--> rename or move file/directory <foo1> to file/directory <foo2>

rm <file>... 					--> remove or delete file(s)
rm -r <foo>... 					--> remove or delete directory(s)
rm -f <foo>						--> force delete a file or directory

clip < <file>					-->	copy text in file to clipboard [Windows]
cat <file> | pbcopy			    -->	copy text in file to clipboard [MAC]
for Linux install xclip

find [PATH] -name <foo>				--> Find a file/folder called <foo> in PATH and its sub-directories [find command is by default case-sensitive, type '-iname' for case-insensitive search]
find [PATH] -type f -name <file>	--> Find a file called <file> in PATH and its sub-directories
find [PATH] -type d -name <folder>	--> Find a folder called <folder> in PATH and its sub-directories
find [PATH] -maxdepth 1 -name '<foo>' --> Find a file/folder called <foo> in PATH only

locate -i <foo>					--> Same as 'find' but used for faster and simpler search [-i ignore case]

grep -wi PATTERN <file>...					--> find PATTERN in listed file(s). If found then print the line which has the PATTERN [-w force PATTERN to match only whole words, -i ignore case of PATTERN]
grep -ln PATTERN <file>...					--> -l print only filename, not line. -n print line number [DO NOT use -l and -n options together]
grep -r PATTERN [PATH] --include="*.xml"	--> print filename(s) and also the line in those files which has PATTERN in PATH and its sub-directories. --include only look for files with certain extensions

less -N <file>					--> display the contents of <file> by page [-N display line numbers]
less +F <file>					--> monitor appension of new line after end of line [ Ctrl+c to return to regular less mode, Shift+f to start monitoring again]
less --help
searching using less command is case-sensitive by default. Type '-i' in less to do case-insensitive search.
Unhighlight last search in 'less' --> Esc, u OR Alt+u

tail -f <file>					--> display the last 10 lines of <file> and monitor appension of new line [Ctrl+c to go back to terminal]
cat <file>                      --> display the contents of <file>

file <foo>						--> display the type of file <foo>
file *							--> display the type of all files in PWD

alias 							--> see the list of shortcuts(=alias) to a command or group of commands
alias <alias_name>='command' 	--> Create an alias called <alias_name> for 'command' [there cannot be a space between the <alias_name> and the EQUAL sign and the opening quote for the command]
unalias <alias_name> 			--> Remove alias


Must Reads
----------
Redirection and Piping - https://ryanstutorials.net/linuxtutorial/piping.php

https://askubuntu.com/questions/12098/what-does-outputting-to-dev-null-accomplish-in-bash-scripts

https://linuxize.com/post/how-to-set-and-list-environment-variables-in-linux

https://linuxize.com/post/bashrc-vs-bash-profile, https://apple.stackexchange.com/questions/51036/what-is-the-difference-between-bash-profile-and-bashrc
